set(VTK_PROJECT_PREFIX ${CMAKE_CURRENT_BINARY_DIR}/installs/vtk)
set(VTK_INSTALL_PREFIX ${VTK_PROJECT_PREFIX}/install)
set(VTK_INSTALL_INCLUDE_DIR ${VTK_INSTALL_PREFIX}/include)
#set(VTK_INSTALL_STATIC_LIBRARY ${VTK_INSTALL_PREFIX}/lib/libz${CMAKE_STATIC_LIBRARY_SUFFIX})
include(ExternalProject)
ExternalProject_Add( vtk_build
   # GIT_SHALLOW ON
    #GIT_TAG "${LIBPNG_GIT_TAG}"
    #GIT_REPOSITORY "${LIBPNG_GIT_REPOSITORY}"
    PREFIX "${VTK_PROJECT_PREFIX}"
    SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/vtk"
    BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}/vtk"
    INSTALL_DIR "${VTK_INSTALL_PREFIX}"
    BUILD_COMMAND make -j32
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${VTK_INSTALL_PREFIX}
               -DCMAKE_BUILD_TYPE=Release
               -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
               -DCMAKE_C_FLAGS_DEBUG=${CMAKE_C_FLAGS_DEBUG}
               -DCMAKE_C_FLAGS_MINSIZEREL=${CMAKE_C_FLAGS_MINSIZEREL}
               -DCMAKE_C_FLAGS_RELWITHDEBINFO=${CMAKE_C_FLAGS_RELWITHDEBINFO}
               -DCMAKE_POSITION_INDEPENDENT_CODE=ON
               -DVTK_BUILD_EXAMPLES=ON
 #              -DPNG_BUILD_VTK=ON
 #              -DVTK_INCLUDE_DIR=${VTK_INSTALL_INCLUDE_DIR}
 #              -DVTK_LIBRARY=${VTK_INSTALL_STATIC_LIBRARY}
)

include(ExternalProject)

set(VTK_PROJECT_PREFIX ${CMAKE_CURRENT_BINARY_DIR}/installs/vtk)
set(VTK_INSTALL_PREFIX ${VTK_PROJECT_PREFIX}/install)
set(VTK_INSTALL_INCLUDE_DIR ${VTK_INSTALL_PREFIX}/include)
ExternalProject_Add( vtk_build
    GIT_SHALLOW ON
    #GIT_TAG "${LIBPNG_GIT_TAG}"
    GIT_REPOSITORY "${CMAKE_CURRENT_SOURCE_DIR/vtk}"
    PREFIX "${VTK_PROJECT_PREFIX}"
    SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/vtk"
    BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}/vtk"
    INSTALL_DIR "${VTK_INSTALL_PREFIX}"
    BUILD_COMMAND make -j32
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${VTK_INSTALL_PREFIX}
               -DCMAKE_BUILD_TYPE=Release
               -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
               -DCMAKE_C_FLAGS_DEBUG=${CMAKE_C_FLAGS_DEBUG}
               -DCMAKE_C_FLAGS_MINSIZEREL=${CMAKE_C_FLAGS_MINSIZEREL}
               -DCMAKE_C_FLAGS_RELWITHDEBINFO=${CMAKE_C_FLAGS_RELWITHDEBINFO}
               -DCMAKE_POSITION_INDEPENDENT_CODE=ON
               -DVTK_BUILD_EXAMPLES=ON
              # -DVTK_GROUP_ENABLE_Qt=WANT
             #  -DVTK_GROUP_ENABLE_Views=WANT
)

set(QT5_PROJECT_PREFIX ${CMAKE_CURRENT_BINARY_DIR}/installs/qt5)
set(QT5_INSTALL_PREFIX ${QT5_PROJECT_PREFIX}/install)
set(QT5_INSTALL_INCLUDE_DIR ${QT5_INSTALL_PREFIX}/include)
ExternalProject_Add( qt5_build
    GIT_SHALLOW ON
    GIT_REPOSITORY "${CMAKE_CURRENT_SOURCE_DIR/qt5}"
    PREFIX "${QT5_PROJECT_PREFIX}"
    SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/qt5"
    BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}/qt5"
    INSTALL_DIR "${QT5_INSTALL_PREFIX}"
   # CONFIGURE_COMMAND "./configure"
    TMP_DIR "${CMAKE_CURRENT_BINARY_DIR}/qt5/tmp"
    CONFIGURE_COMMAND cp -r ${CMAKE_CURRENT_SOURCE_DIR}/qt5 ${CMAKE_CURRENT_BINARY_DIR}/qt5 && ${CMAKE_CURRENT_BINARY_DIR}/init-repository && ${CMAKE_CURRENT_BINARY_DIR}/configure}
    BUILD_COMMAND "make -j8"
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${QT5_INSTALL_PREFIX}
               -DCMAKE_BUILD_TYPE=Release
               -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
               -DCMAKE_C_FLAGS_DEBUG=${CMAKE_C_FLAGS_DEBUG}
               -DCMAKE_C_FLAGS_MINSIZEREL=${CMAKE_C_FLAGS_MINSIZEREL}
               -DCMAKE_C_FLAGS_RELWITHDEBINFO=${CMAKE_C_FLAGS_RELWITHDEBINFO}
               -DCMAKE_POSITION_INDEPENDENT_CODE=ON
               -DQT5_BUILD_EXAMPLES=ON
               -DQT5_GROUP_ENABLE_Qt=WANT
               -DQT5_GROUP_ENABLE_Views=WANT
)